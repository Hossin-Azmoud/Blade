==11142== Memcheck, a memory error detector
==11142== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==11142== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==11142== Command: ./bin/blade main.c
==11142== 
==11142== Argument 'size' of function malloc has a fishy (possibly negative) value: -11
==11142==    at 0x48407B4: malloc (vg_replace_malloc.c:381)
==11142==    by 0x1148E6: memxcpy (xstring.c:35)
==11142==    by 0x113E6C: retokenize_line (token.c:295)
==11142==    by 0x1126DF: add_syntax_ (rendering_functions.c:282)
==11142==    by 0x112902: render_lines (rendering_functions.c:313)
==11142==    by 0x1D0172: editor_refresh (editor.c:124)
==11142==    by 0x1CFFA7: init_editor (editor.c:74)
==11142==    by 0x10CD59: editor (emain.c:32)
==11142==    by 0x10CB03: main (main.c:52)
==11142== 
==11142== Invalid write of size 1
==11142==    at 0x114911: memxcpy (xstring.c:38)
==11142==    by 0x113E6C: retokenize_line (token.c:295)
==11142==    by 0x1126DF: add_syntax_ (rendering_functions.c:282)
==11142==    by 0x112902: render_lines (rendering_functions.c:313)
==11142==    by 0x1D0172: editor_refresh (editor.c:124)
==11142==    by 0x1CFFA7: init_editor (editor.c:74)
==11142==    by 0x10CD59: editor (emain.c:32)
==11142==    by 0x10CB03: main (main.c:52)
==11142==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==11142== 
==11142== 
==11142== Process terminating with default action of signal 11 (SIGSEGV)
==11142==  Access not within mapped region at address 0x0
==11142==    at 0x114911: memxcpy (xstring.c:38)
==11142==    by 0x113E6C: retokenize_line (token.c:295)
==11142==    by 0x1126DF: add_syntax_ (rendering_functions.c:282)
==11142==    by 0x112902: render_lines (rendering_functions.c:313)
==11142==    by 0x1D0172: editor_refresh (editor.c:124)
==11142==    by 0x1CFFA7: init_editor (editor.c:74)
==11142==    by 0x10CD59: editor (emain.c:32)
==11142==    by 0x10CB03: main (main.c:52)
==11142==  If you believe this happened as a result of a stack
==11142==  overflow in your program's main thread (unlikely but
==11142==  possible), you can try to increase the size of the
==11142==  main thread stack using the --main-stacksize= flag.
==11142==  The main thread stack size used in this run was 8388608.
==11142== 
==11142== HEAP SUMMARY:
==11142==     in use at exit: 474,388 bytes in 524 blocks
==11142==   total heap usage: 587 allocs, 63 frees, 495,376 bytes allocated
==11142== 
==11142== LEAK SUMMARY:
==11142==    definitely lost: 23 bytes in 2 blocks
==11142==    indirectly lost: 0 bytes in 0 blocks
==11142==      possibly lost: 789 bytes in 16 blocks
==11142==    still reachable: 473,576 bytes in 506 blocks
==11142==         suppressed: 0 bytes in 0 blocks
==11142== Rerun with --leak-check=full to see details of leaked memory
==11142== 
==11142== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
==11142== 
==11142== 1 errors in context 1 of 2:
==11142== Invalid write of size 1
==11142==    at 0x114911: memxcpy (xstring.c:38)
==11142==    by 0x113E6C: retokenize_line (token.c:295)
==11142==    by 0x1126DF: add_syntax_ (rendering_functions.c:282)
==11142==    by 0x112902: render_lines (rendering_functions.c:313)
==11142==    by 0x1D0172: editor_refresh (editor.c:124)
==11142==    by 0x1CFFA7: init_editor (editor.c:74)
==11142==    by 0x10CD59: editor (emain.c:32)
==11142==    by 0x10CB03: main (main.c:52)
==11142==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==11142== 
==11142== 
==11142== 1 errors in context 2 of 2:
==11142== Argument 'size' of function malloc has a fishy (possibly negative) value: -11
==11142==    at 0x48407B4: malloc (vg_replace_malloc.c:381)
==11142==    by 0x1148E6: memxcpy (xstring.c:35)
==11142==    by 0x113E6C: retokenize_line (token.c:295)
==11142==    by 0x1126DF: add_syntax_ (rendering_functions.c:282)
==11142==    by 0x112902: render_lines (rendering_functions.c:313)
==11142==    by 0x1D0172: editor_refresh (editor.c:124)
==11142==    by 0x1CFFA7: init_editor (editor.c:74)
==11142==    by 0x10CD59: editor (emain.c:32)
==11142==    by 0x10CB03: main (main.c:52)
==11142== 
==11142== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
